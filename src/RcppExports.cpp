// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include "jacobi_types.h"
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// theta1dash
cplx theta1dash(cplx z, cplx tau);
RcppExport SEXP _jacobi_theta1dash(SEXP zSEXP, SEXP tauSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< cplx >::type z(zSEXP);
    Rcpp::traits::input_parameter< cplx >::type tau(tauSEXP);
    rcpp_result_gen = Rcpp::wrap(theta1dash(z, tau));
    return rcpp_result_gen;
END_RCPP
}
// ljtheta2_cpp
cplx ljtheta2_cpp(cplx z, cplx tau);
RcppExport SEXP _jacobi_ljtheta2_cpp(SEXP zSEXP, SEXP tauSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< cplx >::type z(zSEXP);
    Rcpp::traits::input_parameter< cplx >::type tau(tauSEXP);
    rcpp_result_gen = Rcpp::wrap(ljtheta2_cpp(z, tau));
    return rcpp_result_gen;
END_RCPP
}
// jtheta2_cpp
cplx jtheta2_cpp(cplx z, cplx tau);
RcppExport SEXP _jacobi_jtheta2_cpp(SEXP zSEXP, SEXP tauSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< cplx >::type z(zSEXP);
    Rcpp::traits::input_parameter< cplx >::type tau(tauSEXP);
    rcpp_result_gen = Rcpp::wrap(jtheta2_cpp(z, tau));
    return rcpp_result_gen;
END_RCPP
}
// ljtheta1_cpp
cplx ljtheta1_cpp(cplx z, cplx tau);
RcppExport SEXP _jacobi_ljtheta1_cpp(SEXP zSEXP, SEXP tauSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< cplx >::type z(zSEXP);
    Rcpp::traits::input_parameter< cplx >::type tau(tauSEXP);
    rcpp_result_gen = Rcpp::wrap(ljtheta1_cpp(z, tau));
    return rcpp_result_gen;
END_RCPP
}
// jtheta1_cpp
cplx jtheta1_cpp(cplx z, cplx tau);
RcppExport SEXP _jacobi_jtheta1_cpp(SEXP zSEXP, SEXP tauSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< cplx >::type z(zSEXP);
    Rcpp::traits::input_parameter< cplx >::type tau(tauSEXP);
    rcpp_result_gen = Rcpp::wrap(jtheta1_cpp(z, tau));
    return rcpp_result_gen;
END_RCPP
}
// ljtheta3_cpp
cplx ljtheta3_cpp(cplx z, cplx tau);
RcppExport SEXP _jacobi_ljtheta3_cpp(SEXP zSEXP, SEXP tauSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< cplx >::type z(zSEXP);
    Rcpp::traits::input_parameter< cplx >::type tau(tauSEXP);
    rcpp_result_gen = Rcpp::wrap(ljtheta3_cpp(z, tau));
    return rcpp_result_gen;
END_RCPP
}
// jtheta3_cpp
cplx jtheta3_cpp(cplx z, cplx tau);
RcppExport SEXP _jacobi_jtheta3_cpp(SEXP zSEXP, SEXP tauSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< cplx >::type z(zSEXP);
    Rcpp::traits::input_parameter< cplx >::type tau(tauSEXP);
    rcpp_result_gen = Rcpp::wrap(jtheta3_cpp(z, tau));
    return rcpp_result_gen;
END_RCPP
}
// ljtheta4_cpp
cplx ljtheta4_cpp(cplx z, cplx tau);
RcppExport SEXP _jacobi_ljtheta4_cpp(SEXP zSEXP, SEXP tauSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< cplx >::type z(zSEXP);
    Rcpp::traits::input_parameter< cplx >::type tau(tauSEXP);
    rcpp_result_gen = Rcpp::wrap(ljtheta4_cpp(z, tau));
    return rcpp_result_gen;
END_RCPP
}
// jtheta4_cpp
cplx jtheta4_cpp(cplx z, cplx tau);
RcppExport SEXP _jacobi_jtheta4_cpp(SEXP zSEXP, SEXP tauSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< cplx >::type z(zSEXP);
    Rcpp::traits::input_parameter< cplx >::type tau(tauSEXP);
    rcpp_result_gen = Rcpp::wrap(jtheta4_cpp(z, tau));
    return rcpp_result_gen;
END_RCPP
}
// dlogjtheta1
cplx dlogjtheta1(cplx z, cplx q);
RcppExport SEXP _jacobi_dlogjtheta1(SEXP zSEXP, SEXP qSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< cplx >::type z(zSEXP);
    Rcpp::traits::input_parameter< cplx >::type q(qSEXP);
    rcpp_result_gen = Rcpp::wrap(dlogjtheta1(z, q));
    return rcpp_result_gen;
END_RCPP
}
// JTheta1
Rcpp::ComplexMatrix JTheta1(Rcpp::ComplexMatrix z0, Rcomplex dalet);
RcppExport SEXP _jacobi_JTheta1(SEXP z0SEXP, SEXP daletSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::ComplexMatrix >::type z0(z0SEXP);
    Rcpp::traits::input_parameter< Rcomplex >::type dalet(daletSEXP);
    rcpp_result_gen = Rcpp::wrap(JTheta1(z0, dalet));
    return rcpp_result_gen;
END_RCPP
}
// JTheta2
Rcpp::ComplexMatrix JTheta2(Rcpp::ComplexMatrix z0, Rcomplex dalet);
RcppExport SEXP _jacobi_JTheta2(SEXP z0SEXP, SEXP daletSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::ComplexMatrix >::type z0(z0SEXP);
    Rcpp::traits::input_parameter< Rcomplex >::type dalet(daletSEXP);
    rcpp_result_gen = Rcpp::wrap(JTheta2(z0, dalet));
    return rcpp_result_gen;
END_RCPP
}
// JTheta3
Rcpp::ComplexMatrix JTheta3(Rcpp::ComplexMatrix z0, Rcomplex dalet);
RcppExport SEXP _jacobi_JTheta3(SEXP z0SEXP, SEXP daletSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::ComplexMatrix >::type z0(z0SEXP);
    Rcpp::traits::input_parameter< Rcomplex >::type dalet(daletSEXP);
    rcpp_result_gen = Rcpp::wrap(JTheta3(z0, dalet));
    return rcpp_result_gen;
END_RCPP
}
// JTheta4
Rcpp::ComplexMatrix JTheta4(Rcpp::ComplexMatrix z0, Rcomplex dalet);
RcppExport SEXP _jacobi_JTheta4(SEXP z0SEXP, SEXP daletSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::ComplexMatrix >::type z0(z0SEXP);
    Rcpp::traits::input_parameter< Rcomplex >::type dalet(daletSEXP);
    rcpp_result_gen = Rcpp::wrap(JTheta4(z0, dalet));
    return rcpp_result_gen;
END_RCPP
}
// LJTheta1
Rcpp::ComplexMatrix LJTheta1(Rcpp::ComplexMatrix z0, Rcomplex dalet);
RcppExport SEXP _jacobi_LJTheta1(SEXP z0SEXP, SEXP daletSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::ComplexMatrix >::type z0(z0SEXP);
    Rcpp::traits::input_parameter< Rcomplex >::type dalet(daletSEXP);
    rcpp_result_gen = Rcpp::wrap(LJTheta1(z0, dalet));
    return rcpp_result_gen;
END_RCPP
}
// LJTheta2
Rcpp::ComplexMatrix LJTheta2(Rcpp::ComplexMatrix z0, Rcomplex dalet);
RcppExport SEXP _jacobi_LJTheta2(SEXP z0SEXP, SEXP daletSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::ComplexMatrix >::type z0(z0SEXP);
    Rcpp::traits::input_parameter< Rcomplex >::type dalet(daletSEXP);
    rcpp_result_gen = Rcpp::wrap(LJTheta2(z0, dalet));
    return rcpp_result_gen;
END_RCPP
}
// LJTheta3
Rcpp::ComplexMatrix LJTheta3(Rcpp::ComplexMatrix z0, Rcomplex dalet);
RcppExport SEXP _jacobi_LJTheta3(SEXP z0SEXP, SEXP daletSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::ComplexMatrix >::type z0(z0SEXP);
    Rcpp::traits::input_parameter< Rcomplex >::type dalet(daletSEXP);
    rcpp_result_gen = Rcpp::wrap(LJTheta3(z0, dalet));
    return rcpp_result_gen;
END_RCPP
}
// LJTheta4
Rcpp::ComplexMatrix LJTheta4(Rcpp::ComplexMatrix z0, Rcomplex dalet);
RcppExport SEXP _jacobi_LJTheta4(SEXP z0SEXP, SEXP daletSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::ComplexMatrix >::type z0(z0SEXP);
    Rcpp::traits::input_parameter< Rcomplex >::type dalet(daletSEXP);
    rcpp_result_gen = Rcpp::wrap(LJTheta4(z0, dalet));
    return rcpp_result_gen;
END_RCPP
}
// dLTheta1
Rcpp::ComplexMatrix dLTheta1(Rcpp::ComplexMatrix z0, Rcomplex dalet);
RcppExport SEXP _jacobi_dLTheta1(SEXP z0SEXP, SEXP daletSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::ComplexMatrix >::type z0(z0SEXP);
    Rcpp::traits::input_parameter< Rcomplex >::type dalet(daletSEXP);
    rcpp_result_gen = Rcpp::wrap(dLTheta1(z0, dalet));
    return rcpp_result_gen;
END_RCPP
}
// lambda_cpp
Rcpp::ComplexMatrix lambda_cpp(Rcpp::ComplexMatrix Dalet);
RcppExport SEXP _jacobi_lambda_cpp(SEXP DaletSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::ComplexMatrix >::type Dalet(DaletSEXP);
    rcpp_result_gen = Rcpp::wrap(lambda_cpp(Dalet));
    return rcpp_result_gen;
END_RCPP
}
// lambda_transfo
Rcpp::ComplexMatrix lambda_transfo(Rcpp::ComplexMatrix Dalet);
RcppExport SEXP _jacobi_lambda_transfo(SEXP DaletSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::ComplexMatrix >::type Dalet(DaletSEXP);
    rcpp_result_gen = Rcpp::wrap(lambda_transfo(Dalet));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_jacobi_theta1dash", (DL_FUNC) &_jacobi_theta1dash, 2},
    {"_jacobi_ljtheta2_cpp", (DL_FUNC) &_jacobi_ljtheta2_cpp, 2},
    {"_jacobi_jtheta2_cpp", (DL_FUNC) &_jacobi_jtheta2_cpp, 2},
    {"_jacobi_ljtheta1_cpp", (DL_FUNC) &_jacobi_ljtheta1_cpp, 2},
    {"_jacobi_jtheta1_cpp", (DL_FUNC) &_jacobi_jtheta1_cpp, 2},
    {"_jacobi_ljtheta3_cpp", (DL_FUNC) &_jacobi_ljtheta3_cpp, 2},
    {"_jacobi_jtheta3_cpp", (DL_FUNC) &_jacobi_jtheta3_cpp, 2},
    {"_jacobi_ljtheta4_cpp", (DL_FUNC) &_jacobi_ljtheta4_cpp, 2},
    {"_jacobi_jtheta4_cpp", (DL_FUNC) &_jacobi_jtheta4_cpp, 2},
    {"_jacobi_dlogjtheta1", (DL_FUNC) &_jacobi_dlogjtheta1, 2},
    {"_jacobi_JTheta1", (DL_FUNC) &_jacobi_JTheta1, 2},
    {"_jacobi_JTheta2", (DL_FUNC) &_jacobi_JTheta2, 2},
    {"_jacobi_JTheta3", (DL_FUNC) &_jacobi_JTheta3, 2},
    {"_jacobi_JTheta4", (DL_FUNC) &_jacobi_JTheta4, 2},
    {"_jacobi_LJTheta1", (DL_FUNC) &_jacobi_LJTheta1, 2},
    {"_jacobi_LJTheta2", (DL_FUNC) &_jacobi_LJTheta2, 2},
    {"_jacobi_LJTheta3", (DL_FUNC) &_jacobi_LJTheta3, 2},
    {"_jacobi_LJTheta4", (DL_FUNC) &_jacobi_LJTheta4, 2},
    {"_jacobi_dLTheta1", (DL_FUNC) &_jacobi_dLTheta1, 2},
    {"_jacobi_lambda_cpp", (DL_FUNC) &_jacobi_lambda_cpp, 1},
    {"_jacobi_lambda_transfo", (DL_FUNC) &_jacobi_lambda_transfo, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_jacobi(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
